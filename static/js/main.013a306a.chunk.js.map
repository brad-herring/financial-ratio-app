{"version":3,"sources":["Components/Profitability.js","Components/Liquidity.js","Components/Solvency.js","Components/Market.js","Components/Display.js","Components/Analytics.js","App.js","index.js"],"names":["Profitability","props","react_default","a","createElement","className","id","profitMarginRatio","grossMarginRatio","returnTotalAssets","returnCSHE","Liquidity","currentRatio","acidTestRatio","arTurnover","inventoryTurnover","daySalesUncollected","daySalesInventory","totalAssetTurnover","Solvency","debtRatio","equityRatio","debtToEquity","timesInterestEarned","Market","priceEarningsRatio","dividendYield","Display","Components_Profitability","bookValuePerShare","basicEarningsPerShare","Components_Liquidity","Components_Solvency","Components_Market","current_ratio","current_assets","current_liabilities","acid_test_ratio","cash","short_term_investments","current_receivables","accounts_receivable_turnover","net_sales","average_accounts_receivable","inventory_turnover","cogs","average_inventory","days_sales_uncollected","accounts_receivable","days_sales_inventory","ending_inventory","total_asset_turnover","average_total_assets","debt_ratio","total_liabilities","total_assets","equity_ratio","total_equity","debt_to_equity","times_interest_earned","pretax_income","interest_expense","profit_margin_ratio","net_income","gross_margin_ratio","return_total_assets","Analytics","state","companyName","undefined","companyRating","getData","_callee","e","ticker","income_call","income_data","balance_call","balance_data","rating_call","rating_data","ratio_call","ratio_data","name_call","name_data","company_name","receivables","regenerator_default","wrap","_context","prev","next","i","Ticker","preventDefault","target","elements","value","fetch","concat","sent","json","financials","Receivables","Revenue","Inventories","console","log","_this","setState","toFixed","financialRatios","TTM","investmentValuationRatios","stop","onSubmit","this","type","name","placeholder","Components_Display","Component","App","Components_Analytics","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.013a306a.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\n\r\nconst Profitability = props => (\r\n        <div className=\"profitability-display\">\r\n        {/*Profitability Ratios*/}\r\n          <h4 id=\"profitability-title\">Profitability</h4>\r\n          <p className=\"profitability-ratios\">Profit Margin Ratio: {\r\n          <span className=\"profit-margin\">{ props.profitMarginRatio }</span>\r\n          }</p>\r\n\r\n          <p className=\"profitability-ratios\">Gross Margin Ratio: {\r\n          <span className=\"return-on-sales\">{ props.grossMarginRatio }</span>\r\n          }</p>\r\n\r\n          <p className=\"profitability-ratios\">Return on Total Assets: {\r\n          <span className=\"return-on-assets\">{ props.returnTotalAssets }</span>\r\n          }</p>\r\n\r\n          <p className=\"profitability-ratios\">Return on Stockholders' Equity: {\r\n          <span className=\"return-on-SE\">{ props.returnCSHE }</span>\r\n          }</p>\r\n        </div>\r\n  );\r\n\r\n  export default Profitability\r\n","import React from 'react';\r\nimport '../App.css';\r\n\r\nconst Liquidity = props => (\r\n        <div className=\"liquidity-display\">\r\n        {/*Liquidity Ratios*/}\r\n        <h4 id=\"liquidity-title\">Liquidity</h4>\r\n        <p className=\"liquidity-ratios\">Current Ratio: {\r\n        <span className=\"current-ratio\">{ props.currentRatio }</span>\r\n        }</p>\r\n\r\n        <p className=\"liquidity-ratios\">Acid Test Ratio: {\r\n        <span className=\"acid-test\">{ props.acidTestRatio }</span>\r\n        }</p>\r\n\r\n        <p className=\"liquidity-ratios\">Accounts Receivable Turnover: {\r\n        <span className=\"AR-turnover\">{ props.arTurnover }</span>\r\n        }</p>\r\n\r\n        <p className=\"liquidity-ratios\">Inventory Turnover: {\r\n        <span className=\"inventory-turnover\">{ props.inventoryTurnover }</span>\r\n        }</p>\r\n\r\n        <p className=\"liquidity-ratios\">Days' Sales Uncollected: {\r\n        <span className=\"days-sales-uncollected\">{ props.daySalesUncollected }</span>\r\n        }</p>\r\n\r\n        <p className=\"liquidity-ratios\">Days' Sales in Inventory: {\r\n        <span className=\"days-sales-inventory\">{ props.daySalesInventory }</span>\r\n        }</p>\r\n\r\n        <p className=\"liquidity-ratios\">Total Asset Turnover: {\r\n        <span className=\"total-asset-turnover\">{ props.totalAssetTurnover }</span>\r\n        }</p>\r\n      </div>\r\n  );\r\n\r\n  export default Liquidity\r\n","import React from 'react';\r\nimport '../App.css';\r\n\r\nconst Solvency = props => (\r\n        <div className=\"solvency-display\">\r\n        {/*Solvency/Leverage Ratios*/}\r\n        <h4 id=\"solvency-title\">Solvency</h4>\r\n        <p className=\"solvency-ratios\">Debt Ratio: {\r\n        <span className=\"debt-ratio\">{ props.debtRatio }</span>\r\n        }</p>\r\n\r\n        <p className=\"solvency-ratios\">Equity Ratio: {\r\n        <span className=\"equity-ratio\">{ props.equityRatio }</span>\r\n        }</p>\r\n\r\n        <p className=\"solvency-ratios\">Debt-to-Equity Ratio: {\r\n        <span className=\"debt-to-equity\">{ props.debtToEquity }</span>\r\n        }</p>\r\n\r\n        <p className=\"solvency-ratios\">Times Interest Earned: {\r\n        <span className=\"times-interest-earned\">{ props.timesInterestEarned }</span>\r\n        }</p>\r\n      </div>\r\n  );\r\n\r\n  export default Solvency\r\n","import React from 'react';\r\nimport '../App.css';\r\n\r\nconst Market = props => (\r\n        <div className=\"market-display\">\r\n        {/*Market-Prospect Ratios*/}\r\n        <h4 id=\"market-title\">Market Prospects</h4>\r\n        <p className=\"market-ratios\">Price-Earnings Ratio: {\r\n        <span className=\"price-earnings\">{ props.priceEarningsRatio }</span>\r\n        }</p>\r\n\r\n        <p className=\"market-ratios\">Dividend Yield: {\r\n        <span className=\"dividend-yield\">{ props.dividendYield }</span>\r\n        }</p>\r\n      </div>\r\n  );\r\n\r\n  export default Market\r\n","import React from 'react';\r\nimport '../App.css';\r\nimport Profitability from './Profitability'\r\nimport Liquidity from './Liquidity'\r\nimport Solvency from './Solvency'\r\nimport Market from './Market'\r\n\r\nconst Display = props => (\r\n      <div className=\"display\">\r\n        <h2 className=\"analysis-title\">Analysis</h2>\r\n        <hr/>\r\n\r\n        <Profitability\r\n        profitMarginRatio={props.profitMarginRatio}\r\n        grossMarginRatio={props.grossMarginRatio}\r\n        returnTotalAssets={props.returnTotalAssets}\r\n        returnCSHE={props.returnCSHE}\r\n        bookValuePerShare={props.bookValuePerShare}\r\n        basicEarningsPerShare={props.basicEarningsPerShare}\r\n        />\r\n        <hr/>\r\n\r\n        <Liquidity\r\n        currentRatio={props.currentRatio}\r\n        acidTestRatio={props.acidTestRatio}\r\n        arTurnover={props.arTurnover}\r\n        inventoryTurnover={props.inventoryTurnover}\r\n        daySalesUncollected={props.daySalesUncollected}\r\n        daySalesInventory={props.daySalesInventory}\r\n        totalAssetTurnover={props.totalAssetTurnover}\r\n        />\r\n        <hr/>\r\n\r\n        <Solvency\r\n        debtRatio={props.debtRatio}\r\n        equityRatio={props.equityRatio}\r\n        debtToEquity={props.debtToEquity}\r\n        timesInterestEarned={props.timesInterestEarned}\r\n        />\r\n        <hr/>\r\n\r\n        <Market\r\n        priceEarningsRatio={props.priceEarningsRatio}\r\n        dividendYield={props.dividendYield}\r\n        />\r\n\r\n      </div>\r\n);\r\n\r\nexport default Display;\r\n","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport Display from './Display';\r\n\r\n//Liquidity\r\nconst current_ratio = (current_assets, current_liabilities) => {\r\n  return current_assets / current_liabilities;\r\n}\r\nconst acid_test_ratio = (cash, short_term_investments, current_receivables, current_liabilities) => {\r\n  return (cash + short_term_investments + current_receivables) / current_liabilities;\r\n}\r\nconst accounts_receivable_turnover = (net_sales, average_accounts_receivable) => {\r\n  return net_sales / average_accounts_receivable;\r\n}\r\nconst inventory_turnover = (cogs, average_inventory) => {\r\n  return cogs / average_inventory;\r\n}\r\nconst days_sales_uncollected = (accounts_receivable, net_sales) => {\r\n  return (accounts_receivable / net_sales) * 360;\r\n}\r\nconst days_sales_inventory = (ending_inventory, cogs) => {\r\n  return (ending_inventory / cogs) * 360;\r\n}\r\nconst total_asset_turnover = (net_sales, average_total_assets) => {\r\n  return net_sales / average_total_assets;\r\n}\r\n\r\n//Solvency\r\nconst debt_ratio = (total_liabilities, total_assets) => {\r\n  return total_liabilities / total_assets;\r\n}\r\nconst equity_ratio = (total_equity, total_assets) => {\r\n  return total_equity / total_assets;\r\n}\r\nconst debt_to_equity = (total_liabilities, total_equity) => {\r\n  return total_liabilities / total_equity;\r\n}\r\nconst times_interest_earned = (pretax_income, interest_expense) => {\r\n  return pretax_income / interest_expense;\r\n}\r\n\r\n//Profitability\r\nconst profit_margin_ratio = (net_income, net_sales) => {\r\n  return net_income / net_sales;\r\n}\r\nconst gross_margin_ratio = (net_sales, cogs) => {\r\n  return (net_sales - cogs) / net_sales;\r\n}\r\nconst return_total_assets = (net_income, average_total_assets) => {\r\n  return net_income / average_total_assets;\r\n}\r\nconst return_common_SE = (net_income, preferred_dividends, avg_SE) => {\r\n  return (net_income - preferred_dividends) / avg_SE;\r\n}\r\nconst book_value_per_share = (she_common_shares, num_shares_outstanding) => {\r\n  return she_common_shares / num_shares_outstanding;\r\n}\r\nconst basic_earnings_per_share = (net_income, preferred_dividends, weighted_avg_shares_outstanding) => {\r\n  return (net_income - preferred_dividends) / weighted_avg_shares_outstanding;\r\n}\r\n\r\nclass Analytics extends Component {\r\n  state = {\r\n    companyName: undefined,\r\n    companyRating: undefined,\r\n    currentRatio: undefined,\r\n    acidTestRatio: undefined,\r\n    arTurnover: undefined,\r\n    inventoryTurnover: undefined,\r\n    daySalesUncollected: undefined,\r\n    daySalesInventory: undefined,\r\n    totalAssetTurnover: undefined,\r\n    debtRatio: undefined,\r\n    equityRatio: undefined,\r\n    debtToEquity: undefined,\r\n    timesInterestEarned: undefined,\r\n    profitMarginRatio: undefined,\r\n    grossMarginRatio: undefined,\r\n    returnTotalAssets: undefined,\r\n    returnCSHE: undefined,\r\n    bookValuePerShare: undefined,\r\n    basicEarningsPerShare: undefined,\r\n    priceEarningsRatio: undefined,\r\n    dividendYield: undefined\r\n  }\r\n\r\n  getData = async (e) => {\r\n    e.preventDefault();\r\n    const ticker = e.target.elements.ticker.value;\r\n\r\n    const income_call = await fetch(`https://cors-anywhere.herokuapp.com/https://financialmodelingprep.com/api/financials/income-statement/${ticker}?period=quarter&datatype=json`);\r\n    const income_data = await income_call.json();\r\n\r\n    const balance_call = await fetch(`https://cors-anywhere.herokuapp.com/https://financialmodelingprep.com/api/financials/balance-sheet-statement/${ticker}?period=quarter&datatype=json`);\r\n    const balance_data = await balance_call.json();\r\n\r\n    const rating_call = await fetch(`https://cors-anywhere.herokuapp.com/https://financialmodelingprep.com/api/company/rating/${ticker}?datatype=json`);\r\n    const rating_data = await rating_call.json();\r\n\r\n    const ratio_call = await fetch(`https://cors-anywhere.herokuapp.com/https://financialmodelingprep.com/api/financial-ratios/${ticker}?datatype=json`);\r\n    const ratio_data = await ratio_call.json();\r\n\r\n    const name_call = await fetch(`https://cors-anywhere.herokuapp.com/https://financialmodelingprep.com/api/stock/list/all?datatype=json`);\r\n    const name_data = await name_call.json();\r\n\r\n    function company_name(ticker) {\r\n      for(var i = 0; i < 7396; i++) {\r\n        if(name_data[i].Ticker === ticker) {\r\n          return name_data[i].companyName;\r\n        }\r\n      }\r\n    }\r\n\r\n    const total_assets = balance_data.financials[0][\"Total current assets\"];\r\n    const current_assets = balance_data.financials[0][\"Total current assets\"];\r\n    const current_liabilities = balance_data.financials[0][\"Total current liabilities\"];\r\n    const cash = balance_data.financials[0][\"Cash and cash equivalents\"];\r\n    const short_term_investments = balance_data.financials[0][\"Short-term investments\"];\r\n    const receivables = balance_data.financials[0].Receivables;\r\n    const net_sales = income_data.financials[0].Revenue;\r\n    const average_accounts_receivable = (balance_data.financials[0][\"Receivables\"] + balance_data.financials[1][\"Receivables\"]) / 2;\r\n    const cogs = income_data.financials[0][\"Cost of Revenue\"];\r\n    const average_inventory = ((balance_data.financials[0].Inventories + balance_data.financials[1].Inventories) / 2);\r\n    const ending_inventory = balance_data.financials[0].Inventories;\r\n    const average_total_assets = (balance_data.financials[0][\"Total assets\"] + balance_data.financials[1][\"Total assets\"]) / 2;\r\n    const total_liabilities = balance_data.financials[0][\"Total liabilities\"];\r\n    const total_equity = balance_data.financials[0][\"Shareholders Equity\"];\r\n    const pretax_income = income_data.financials[0][\"Earnings before Tax\"];\r\n    const interest_expense = income_data.financials[0][\"Interest Expense\"];\r\n    const net_income = income_data.financials[0][\"Net Income\"];\r\n    const preferred_dividends = income_data.financials[0][\"Preferred Dividends\"];\r\n\r\n    console.log(income_data);\r\n    console.log(balance_data);\r\n    console.log(rating_data);\r\n    console.log(ratio_data);\r\n    console.log(company_name(ticker));\r\n\r\n    this.setState({\r\n      companyName: company_name(ticker),\r\n      companyRating: undefined,\r\n      currentRatio: current_ratio(current_assets, current_liabilities).toFixed(3),\r\n      acidTestRatio: acid_test_ratio(cash, short_term_investments, receivables, current_liabilities).toFixed(3),\r\n      arTurnover:accounts_receivable_turnover(net_sales, average_accounts_receivable).toFixed(3),\r\n      inventoryTurnover: inventory_turnover(cogs, average_inventory).toFixed(3),\r\n      daySalesUncollected: days_sales_uncollected(receivables, net_sales).toFixed(3),\r\n      daySalesInventory: days_sales_inventory(ending_inventory, cogs).toFixed(3),\r\n      totalAssetTurnover: total_asset_turnover(net_sales, average_total_assets).toFixed(3),\r\n      debtRatio: debt_ratio(total_liabilities, total_assets).toFixed(3),\r\n      equityRatio: equity_ratio(total_equity, total_assets).toFixed(3),\r\n      debtToEquity: debt_to_equity(total_liabilities, total_equity).toFixed(3),\r\n      timesInterestEarned: times_interest_earned(pretax_income, interest_expense).toFixed(3),\r\n      profitMarginRatio: profit_margin_ratio(net_income, net_sales).toFixed(3),\r\n      grossMarginRatio: gross_margin_ratio(net_sales, cogs).toFixed(3),\r\n      returnTotalAssets: return_total_assets(net_income, average_total_assets).toFixed(3),\r\n      returnCSHE: undefined,\r\n      bookValuePerShare: undefined,\r\n      basicEarningsPerShare: undefined,\r\n      priceEarningsRatio: ratio_data.financialRatios.TTM.investmentValuationRatios.priceEarningsRatio.toFixed(2),\r\n      dividendYield: ratio_data.financialRatios.TTM.investmentValuationRatios.dividendYield.toFixed(4)\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className=\"form\" onSubmit={this.getData}>\r\n          <input className=\"form-control\" type=\"text\" name=\"ticker\" placeholder=\"Company ticker...\"/>\r\n          <button id=\"main-button\" className=\"btn btn-success\">Calculate</button>\r\n        </form>\r\n\r\n        <Display\r\n        companyName={this.state.companyName}\r\n        companyRating={this.state.companyRating}\r\n        currentRatio={this.state.currentRatio}\r\n        acidTestRatio={this.state.acidTestRatio}\r\n        arTurnover={this.state.arTurnover}\r\n        inventoryTurnover={this.state.inventoryTurnover}\r\n        daySalesUncollected={this.state.daySalesUncollected}\r\n        daySalesInventory={this.state.daySalesInventory}\r\n        totalAssetTurnover={this.state.totalAssetTurnover}\r\n        debtRatio={this.state.debtRatio}\r\n        equityRatio={this.state.equityRatio}\r\n        debtToEquity={this.state.debtToEquity}\r\n        timesInterestEarned={this.state.timesInterestEarned}\r\n        profitMarginRatio={this.state.profitMarginRatio}\r\n        grossMarginRatio={this.state.grossMarginRatio}\r\n        returnTotalAssets={this.state.returnTotalAssets}\r\n        returnCSHE={this.state.returnCSHE}\r\n        bookValuePerShare={this.state.bookValuePerShare}\r\n        basicEarningsPerShare={this.state.basicEarningsPerShare}\r\n        priceEarningsRatio={this.state.priceEarningsRatio}\r\n        dividendYield={this.state.dividendYield}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Analytics;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Analytics from './Components/Analytics';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div>\n        <div className=\"wrapper\">\n          <div className=\"main\">\n            <div className=\"header-container\">\n                <h1>Financial Analyzer</h1>\n            </div>\n            <div className=\"info\">\n            <Analytics />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}